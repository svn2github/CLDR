<project name="CLDR" default="util" basedir=".">
    <target name="init">
        <tstamp/>
        <property name="src.dir" value="."/>
        <property name="build.dir" value="classes"/>
        <property name="jar.file" value="cldr.jar"/>
        <property name="jarSrc.file" value="cldrsrc.jar"/>
        <property name="doc.dir" value="doc"/>
        <property name="doc.params" value=""/>
        <!-- Load environment variables -->
        <property environment="env"/>
        
        <path id="build.classpath">
            <pathelement path="${build.dir}"/>
        </path>
        
        <condition property="is.icu4j.classes.set" >
            <or>
                <isset property="env.ICU4J_CLASSES" />
                <isset property="env.ICU4J_JAR" />
            </or>
        </condition > 
        <fail unless="is.icu4j.classes.set" message="Please set the ICU4J_CLASSES or ICU4J_JAR environment variable."/>
        
        <condition property="is.utilities.classes.set" >
            <or>
                <isset property="env.ICU4J_CLASSES" />
                <isset property="env.UTILITIES_JAR" />
            </or>
        </condition > 
        <fail unless="is.utilities.classes.set" message="Please set the ICU4J_CLASSES or UTILITIES_JAR environment variable."/>        
        <mkdir dir="${build.dir}"/>
        
        <path id="project.class.path">
            <pathelement path="${java.class.path}/"/>
            <pathelement path="${build.dir}"/>
            <pathelement path="${env.ICU4J_CLASSES}"/>
            <pathelement path="${env.CLDR_CLASSES}"/>
            <pathelement location="${env.ICU4J_JAR}"/>
            <pathelement location="${env.CLDR_JAR}"/>
            <pathelement location="${env.UTILITIES_JAR}"/>
            <pathelement location="${env.XML_APIS_JAR}"/>
        </path>
        <echo message="java home: ${java.home}"/>
        <echo message="java version: ${java.version}"/>
        <echo message="ant java version: ${ant.java.version}"/>
        <echo message="${ant.version}"/>
        <echo message="${env.XML_APIS_JAR}"/>
    </target>

    <!-- build everything but dist-related stuff -->
    <target name="all" depends="util,ant-plugin,tool,posix,icu,test,ooo" description="build all primary targets"/>
    <target name="ant-plugin" depends="init" description="build utility classes">
        <javac includes="org/unicode/cldr/ant/*.java"
            excludes="**/CVS/**/*"
            srcdir="${src.dir}"
            destdir="${build.dir}"
            classpathref="project.class.path"
            source="1.5"
            debug="on" deprecation="off"
            encoding="ASCII"/>
    </target>
    <target name="util" depends="init" description="build utility classes">
        <javac includes="org/unicode/cldr/util/**/*.java"
            excludes="**/CVS/**/*"
            srcdir="${src.dir}"
            destdir="${build.dir}"
            classpathref="project.class.path"
            source="1.5"
            debug="on" deprecation="off"
            encoding="ASCII"/>
        <!-- copy data files into classes.. -->
        <mkdir dir="${build.dir}/org/unicode/cldr/util/data"/>
        <copy todir="${build.dir}/org/unicode/cldr/util/data">
            <fileset dir="${src.dir}/org/unicode/cldr/util/data" 
                excludes="**/CVS/**/*"/>
        </copy>
    </target>
    <target name="tool" depends="init,util" description="build tool classes">
        <javac includes="org/unicode/cldr/tool/**/*.java"
            excludes="**/CVS/**/*"
            srcdir="${src.dir}"
            destdir="${build.dir}"
            classpathref="project.class.path"
            source="1.5"
            debug="on" deprecation="off"
            encoding="ASCII"/>
    </target>
    <target name="posix" depends="init,util" description="build posix conversion tool">
        <javac includes="org/unicode/cldr/posix/**/*.java"
            excludes="**/CVS/**/*"
            srcdir="${src.dir}"
            destdir="${build.dir}"
            classpathref="project.class.path"
            source="1.4"
            debug="on" deprecation="off"
            encoding="ASCII"/>
    </target>
	<target name="icu" depends="init, ant-plugin, util" description="build posix conversion tool">
	        <javac includes="org/unicode/cldr/icu/**/*.java"
	            excludes="**/CVS/**/*"
	            srcdir="${src.dir}"
	            destdir="${build.dir}"
                classpathref="project.class.path"
	            source="1.4"
	            debug="on" deprecation="off"
	            encoding="ASCII"/>
	</target>
    <target name="test" depends="init,util,tool" description="build tests">
        <javac includes="org/unicode/cldr/test/**/*.java"
            excludes="**/CVS/**/*"
            srcdir="${src.dir}"
            destdir="${build.dir}"
            classpathref="project.class.path"
            source="1.5"
            debug="on" deprecation="off"
            encoding="ASCII"/>
    </target>
   <target name="ooo" depends="init,icu,util" description="build OpenOffice.org conversion tools">
        <javac includes="org/unicode/cldr/ooo/**/*.java"
            excludes="**/CVS/**/*"
            srcdir="${src.dir}"
            destdir="${build.dir}"
            classpathref="project.class.path"
            source="1.4"
            debug="on" deprecation="off"
            encoding="ASCII"/>
    </target>
    <target name="clean" depends="init" description="remove all build targets">
        <delete dir="${build.dir}"/>
        <delete file="${jar.file}"/>
    </target>
    
    <target name="jar" depends="all" description="build full 'cldr.jar' jar file">
        <jar jarfile="${jar.file}"
            compress="true"
            includes="org/unicode/cldr/util/**/*,org/unicode/cldr/tool/**/*,org/unicode/cldr/test/**/*,org/unicode/cldr/posix/**/*,org/unicode/cldr/ooo/**/*,org/unicode/cldr/ant/**/*,org/unicode/cldr/icu/**/*"
            basedir="${build.dir}"/>
    </target>
  <!-- Docs stuff -->
    <!-- use excludefiles below when we move to ant 1.5 -->
    <target name="docs" depends="init" description="build user javadoc">
	<tstamp>
		<format property="current.year" pattern="yyyy"/>
	</tstamp>
        <echo message="doc params: ${doc.params}"/>
        <mkdir dir="${doc.dir}"/>
        <javadoc
            packagenames="org.unicode.cldr.*"
            sourcepath="${src.dir}"
            destdir="${doc.dir}"
            classpathref="project.class.path"
            nodeprecatedlist="true"
            windowtitle="CLDR | Java Tools"
            doctitle="CLDR | Java Tools"
            encoding="utf-8"
            docencoding="utf-8"
            additionalparam="${doc.params}"
            link="http://java.sun.com/j2se/1.5/docs/api"
            bottom="&lt;font size=-1>&lt;a  target='_top' href='http://www.unicode.org/copyright.html'>Copyright &amp;copy; 2004-${current.year} Unicode, Inc. All Rights Reserved.&lt;/a>&lt;/font>"
            source="1.5"/>
    </target>
               <!-- bottom="&lt;font size=-1>Copyright (c) ${current.year} IBM Corporation and others.&lt;/font>" -->

    
  <!-- SurveyTool (web) stuff follows ................. -->
    
    <!-- our very own init. -->
    <target name="webInit" depends="init">
        <!-- <tstamp/>  init already does this? -->
        
        <!-- Load environment variables -->
        <property environment="env"/>
        
        <!-- TODO: document.. -->
        <!-- for now: depends on tomcat (catalina) for servlet API. -->
        <property name="tomcat.home"        value="${env.CATALINA_HOME}"/>
        <condition property="is.tomcat.home.set" >
                <isset property="env.CATALINA_HOME" />
        </condition > 
        <fail unless="is.tomcat.home.set" message="Please set the CATALINA_HOME environment variable to point at your Tomcat installation."/>   
        
        <property name="icu.home"           value="${env.ICU4J_HOME}"/>
        
        <property name="servlet.jar"        value="${tomcat.home}/lib/servlet-api.jar"/>
        <property name="jsp.jar"            value="${tomcat.home}/lib/jsp-api.jar"/>
        <property name="derby.jar"          value="${env.DERBY_HOME}/lib/derby.jar"/>

        <property name="mail.jar"            value="${tomcat.home}/lib/mail.jar"/>
        <property name="wardata" value="${src.dir}/org/unicode/cldr/web/data"/>
        <!-- Configure the custom Ant tasks for the Manager application -->
        <taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask"/>
        <taskdef name="list"      classname="org.apache.catalina.ant.ListTask"/>
        <taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask"/>
        <taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask"/>
        <taskdef name="roles"     classname="org.apache.catalina.ant.RolesTask"/>
        <taskdef name="start"     classname="org.apache.catalina.ant.StartTask"/>
        <taskdef name="stop"      classname="org.apache.catalina.ant.StopTask"/>
        <taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask"/>

        <!-- Configure the context path for this application -->
        <property name="path"     value="/cldr-apps"/>

        <!-- Configure properties to access the Manager application -->
        <property name="url"      value="http://localhost:8080/manager"/>  <!-- TODO: support multiple, overrides -->
        <property name="username" value="admin"/> <!-- TODO: support overrides -->
        <!-- call ant with:  -Dpassword=adminpass to use the updating stuff --> 
        
        <property name="warfile" location="cldr-apps.war"/>

        <fileset id="otherjars" dir="${wardata}/jars">
            <include name="**/*.jar"/>
        </fileset>

        <path id="weblib.classpath">
            <fileset refid="otherjars"/>
            <path refid="project.class.path"/>
            <pathelement path="${servlet.jar}"/>
            <pathelement path="${derby.jar}"/> 
            <pathelement path="${mail.jar}"/> 
        </path>

        <echo message="weblib.classpath is set to = ${derby.jar}:${icu.jar}:${utilities.jar}:${servlet.jar}"/>
        
        <!--
        TODO: do the following for the other env variables above.. 
        <condition property="is.icu4j.classes.set" >
            <isset property="env.ICU4J_CLASSES" />
        </condition > 
        <fail unless="is.icu4j.classes.set" message="Please set the ICU4J_CLASSES environment variable."/>
        -->                
    </target>    
    
    <!-- build all web related things -->
    <target name="web" depends="webInit,util" description="build web classes">
        <javac includes="org/unicode/cldr/web/**/*.java"
            excludes="**/CVS/**/*"
            srcdir="${src.dir}"
            destdir="${build.dir}"
            classpathref="weblib.classpath"
            source="1.5"
            debug="on" deprecation="off"
            encoding="ASCII"/>
    </target>
 
    <!-- build as a WAR file -->
    <!-- TODO: include CLDR as a jar? Only include certain classes? -->
    <target name="war" depends="web" description="Build war">        
        <war destfile="${warfile}" webxml="${wardata}/cldr-apps.xml">
            <!-- classes (for now, may want to take cldr utils as a jar later) --> 
            <classes dir="${build.dir}"/>

            <!-- all other files in /root --> 
            <zipfileset dir="${wardata}/root" excludes="**/CVS/**/*"/>
            
            <!-- certain jars that we want --> 
            <lib file="${utilities.jar}"/>  <!-- CLDR utilities -->
            <!-- May want this later. -->
            <!--  <pathelement path="${jsp.jar}"/> -->
            
            <!-- include any other jars in /jars  -->
            <lib dir="${wardata}/jars" includes="*.jar" /> 
        </war>
    </target>

    <!-- deploy to the server -->
    <target name="deploy" depends="webInit,war">
        <deploy url="${url}" username="${username}" password="${password}"
            path="${path}" war="${warfile}"/>
    </target>

    <!-- reload on the server - doesn't require building -->
    <target name="reload" description="Reload SurveyTool application"
          depends="webInit">
        <reload  url="${url}" username="${username}" password="${password}"
            path="${path}"/>
    </target>

    <!-- un-deploy from the server -->
    <target name="undeploy" description="Remove SurveyTool application" depends="webInit">
        <undeploy url="${url}" username="${username}" password="${password}"
            path="${path}"/>
    </target>
  
    <!-- redeploy to the server.  Builds first so we catch trouble early.
        Note, this will fail if you haven't deployed the first time. -->
    <target name="redeploy" description="Redeploy SurveyTool application" 
        depends="webInit,war,undeploy,deploy">
    </target>
  <!-- for testing and development -->
  <target name="icu4c" depends="init, ant-plugin, icu">
    <ant dir="${env.ICU4C_DIR}/source/data" antfile="build.xml" target="all" />
  </target>   
</project>
